---
layout: essay
type: essay
title: Overflowing (Dumb?) Questions
date: 2017-01-19
labels:
  - Learning
  - StackOverflow
---

<img class="ui tiny center spaced image" src=”http://www.iconsdb.com/icons/preview/guacamole-green/question-mark-xxl.png” >

There comes a time in every programmer's life where they would come across a seemingly problem with no clue how to solve it. Resorting to Google resulted with irrelevant solutions, wrong answers, or unanswered questions. Was this problem just so simple that it was never asked? Am I the only one in the world right now that experienced this anomaly- unlikely, so do I just lack a fundamental understanding or skill that's required to solve this problem?

Is this really worth asking on StackOverflow?

Perhaps, first, it would be best to define the smart and the dumb question.

<h2>Dumb Questions</h2>

Stupid questions are questions that get asked all too often. They, in a sense, reflect the individual's ability to research and how much they actually care about the finding the solution over just <i>getting it</i>. In other words, a dumb question will show how much effort the asker put into this problem. If it's the first thing that pops up on a Google search, chances are, they didn't care about their problem in the first place or even bothered to attempt the problem themselves. It's annoying.

Stupid questions are also those that are lacking information about the issue itself, especially if you did not properly tag your question. If you say "for some reason my player character gameobject is not moving help!" It will be nearly impossible for anyone to diagnose the issue enough to give you a meaningful response. The inclusion of detail to what you've tried, what you think it is (make sure you state that it's a guess; this is to maybe point those wanting to assit you in considering that as a direction to look at, but overall, your question should be asked in such a way that it would encompass the problem as if your guess was wrong as well), what you are using (software, version numbers, other necessary details), in what order did the symptoms of the problem occur, all the way down to the source code itself is imperative to someone that's trying to help you.

To note on incorporating your source code, don't include your entire project files. Only include what's necessary, whether it's the class, an interface, a function, only a part of a function, a single line of code, whatever. Be precise, not a novelist.

Of course, stupid questions also have the tendency to include putting in irrelevant dialogue. "I know I might be stupid to ask this, but..." or "I'm just a noob, please be nice". People answering your question, no matter how beginner level or advanced, do not care about these things. It's more of a distraction or waste of space and time. Saying stuff like "help me" is also very redundant because you're already posting on a help board, and people specifically clicked on your question to maybe provide some assistance. This also applies to the title/subject line of the question; only include the problem in a precise manner, where stupid questions tend to have "help me" or "urgent!!!". Nobody cares (except you).

<h2>Smart Questions</h2>

So what is a <i>smart</i> question? Not a dumb question.

Be precise when writing your question, what the problem is, including everything that is deemed necessary in an orderly manner where you don't end up with an essay (wall of text) at the end of it. Your question is written so it could be easily understood, encompasses enough information for it to be solved, and refrains from inputting irrelevant dialogue in both the title and body of the post. 

The level of the question, beginner or advanced, does not affect the quality of the question. The effort you put into it does, especially if the question hasn't already been asked and answered before. 
